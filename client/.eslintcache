[{"/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/index.tsx":"1","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/reportWebVitals.ts":"2","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/App.tsx":"3","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/InputForm.jsx":"4","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/ResultsTable.jsx":"5"},{"size":502,"mtime":1608240471730,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608159099816,"results":"8","hashOfConfig":"7"},{"size":1571,"mtime":1608247383767,"results":"9","hashOfConfig":"7"},{"size":2208,"mtime":1608247919301,"results":"10","hashOfConfig":"7"},{"size":631,"mtime":1608245715843,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xsqtix",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/index.tsx",[],["26","27"],"/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/reportWebVitals.ts",[],"/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/App.tsx",["28"],"import React, { useState } from 'react';\nimport './App.css';\nimport { ResultsTable } from './ResultsTable';\nimport { InputForm } from './InputForm';\nimport axios from 'axios';\n\n// 104501\n\nfunction App() {\n\n  const [results, setResults] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n  const [ready, setReady] = useState(false);\n\n  const onSubmit = async (data: any) => {\n    setIsLoading(true);\n\n    const numOfPolygonPages: number = data.numOfPolygonPages;\n    const polygonProblemsId: string = data.problemsId;\n    const matchingPercentageThreshold: number =\n      data.matchingPercentageThreshold;\n\n    const url = `http://localhost:${process.env.REACT_APP_PORT}/api/cf-problems-matching`;\n\n    try {\n      const res = await axios.post(\n        url,\n        { numOfPolygonPages, polygonProblemsId, matchingPercentageThreshold },\n        { timeout: 0 }\n      );\n\n      console.log(res);\n\n      const { ready, maxSimilarities } = res.data;\n\n      console.log(ready);\n      console.log(maxSimilarities);\n\n      setResults(maxSimilarities);\n      setReady(ready);\n\n      setIsLoading(false || !ready);\n    } catch (error) {\n      alert('An error occurred. \\n' + error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <body>\n          {results === undefined ? (\n            <InputForm isLoading={isLoading} onSubmit={onSubmit} />\n          ) : (\n            <ResultsTable results={results} />\n          )}\n        </body>\n      </header>\n    </div>\n  );\n}\n\nexport { App };\n","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/InputForm.jsx",["29"],"import React, { useState } from 'react';\n\nfunction InputForm({ onSubmit, isLoading }) {\n\n    const [numOfPolygonPages, setNumOfPolygonPages] = useState('');\n    const [problemsId, setProblemsId] = useState('');\n    const [matchingPercentageThreshold, setMatchingPercentageThreshold] = useState('');\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        onSubmit({\n            problemsId, numOfPolygonPages: +numOfPolygonPages,\n            matchingPercentageThreshold: +matchingPercentageThreshold\n        });\n    };\n\n    const createOnChangeHandler = setter => event => {\n        setter(event.target.value);\n    };\n\n    return (\n        <form classname='form' onSubmit={submitHandler}>\n            <div>\n                <input\n                    className=\"input form-entry\"\n                    id=\"numOfPolygonPages\"\n                    placeholder=\"Enter Number of Polygon Pages\"\n                    value={numOfPolygonPages}\n                    onChange={createOnChangeHandler(setNumOfPolygonPages)}\n                />\n            </div>\n\n            <div>\n                <textarea\n                    className=\"comma-separated-input form-entry\"\n                    id=\"problem-id\"\n                    placeholder=\"Enter Problem ID\"\n                    value={problemsId}\n                    onChange={createOnChangeHandler(setProblemsId)}\n                />\n            </div>\n\n            {/* <div>\n                <input\n                    className=\"input form-entry\"\n                    id=\"matching-percentage\"\n                    placeholder=\"Enter Matching Percentage Threshold\"\n                    value={matchingPercentageThreshold}\n                    onChange={createOnChangeHandler(setMatchingPercentageThreshold)}\n                />\n            </div> */}\n            <button type=\"submit\" className=\"submit form-entry\" disabled={isLoading}>\n                {isLoading && (\n                    <div class=\"spinner-border spinner-grow-sm mr-1\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                )}\n                Submit\n\n            </button>\n        </form>\n    );\n}\n\nexport { InputForm };","/home/mohamed/Desktop/Projects/acmASCIS/2020/cf-problems-matching-detector/client/src/ResultsTable.jsx",[],["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":13,"column":10,"nodeType":"38","messageId":"39","endLine":13,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":7,"column":41,"nodeType":"38","messageId":"39","endLine":7,"endColumn":71},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"@typescript-eslint/no-unused-vars","'ready' is assigned a value but never used.","Identifier","unusedVar","no-unused-vars","'setMatchingPercentageThreshold' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]